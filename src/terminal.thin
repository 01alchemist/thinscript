#if TERMINAL
  extern enum Color {
    DEFAULT,
    BOLD,
    RED,
    GREEN,
    MAGENTA,
  }

  declare function Terminal_setColor(color: Color): void;
  declare function Terminal_write(text: string): void;

  extern function Compiler_writeLogToTerminal(compiler: Compiler): void {
    var diagnostic = compiler.log.first;
    var builder: StringBuilder;

    while (diagnostic != null) {
      var location = diagnostic.range.source.indexToLineColumn(diagnostic.range.start);

      // Source
      builder = StringBuilder_new();
      diagnostic.appendSourceName(builder, location);
      Terminal_setColor(Color.BOLD);
      Terminal_write(builder.finish());

      // Kind
      builder = StringBuilder_new();
      diagnostic.appendKind(builder);
      Terminal_setColor(diagnostic.kind == DiagnosticKind.ERROR ? Color.RED : Color.MAGENTA);
      Terminal_write(builder.finish());

      // Message
      builder = StringBuilder_new();
      diagnostic.appendMessage(builder);
      Terminal_setColor(Color.BOLD);
      Terminal_write(builder.finish());

      // Line contents
      builder = StringBuilder_new();
      diagnostic.appendLineContents(builder, location);
      Terminal_setColor(Color.DEFAULT);
      Terminal_write(builder.finish());

      // Range
      builder = StringBuilder_new();
      diagnostic.appendRange(builder, location);
      Terminal_setColor(Color.GREEN);
      Terminal_write(builder.finish());

      diagnostic = diagnostic.next;
    }

    Terminal_setColor(Color.DEFAULT);
  }
#endif
